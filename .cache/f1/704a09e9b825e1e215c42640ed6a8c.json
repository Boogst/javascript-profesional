{"id":"ejercicios/promesas.html","dependencies":[{"name":"/mnt/c/Users/villegasDev/platzi/Escuela de JS/Curso profesional de JS/javascript-profesional/package.json","includedInParent":true,"mtime":1580510549686}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Promises</title>\n</head>\n\n<body>\n\n  <ul>\n    <li><button id=\"sequence\">Get Top Movies in Sequence</button></li>\n    <li><button id=\"parallel\">Get Top Movies in Parallel</button></li>\n    <li><button id=\"fastest\">Get Fastest Top Movie</button></li>\n  </ul>\n\n  <ul id=\"movies\"></ul>\n\n  <script>const apiKey = '2ce013b7754ed52002975e7ffcca3e1d';\n\nasync function getMovie(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`; //return fetch(url).then(response => response.json())\n\n  const response = await fetch(url);\n  return response.json(); //return data;\n}\n\nasync function getPopularMovies() {\n  const url = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${apiKey}`; // return fetch(url)\n  //     .then(response => response.json())\n  //     .then(data => data.results);\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.results;\n}\n\nasync function getTopMoviesIds(n = 3) {\n  // return getPopularMovies().then(popularMovies =>\n  //     popularMovies.slice(0, n).map(movie => movie.id)\n  // );\n  const popularMovies = await getPopularMovies();\n  return popularMovies.slice(0, n).map(movie => movie.id);\n}\n\nfunction renderMovies(movies) {\n  const movieList = document.getElementById('movies');\n  movieList.innerHTML = '';\n  movies.forEach(movie => {\n    const listItem = document.createElement('li');\n    listItem.innerHTML = `\n            <img src=\"https://image.tmdb.org/t/p/w342${movie.poster_path}\" />\n            <h5>${movie.title}</h5>\n            <p>Released on <em>${movie.release_date}</em></p>\n            `;\n    movieList.appendChild(listItem);\n  });\n}\n\nasync function getTopMoviesInSequence() {\n  const ids = await getTopMoviesIds();\n  const movies = [];\n\n  for (const id of ids) {\n    const movie = await getMovie(id);\n    movies.push(movie);\n  }\n\n  return movies;\n}\n\nasync function getTopMoviesInParallel() {\n  const ids = await getTopMoviesIds();\n  const movies = ids.map(id => getMovie(id));\n  return Promise.all(movies);\n}\n\nasync function getFastestTopMovie() {\n  const ids = await getTopMoviesIds();\n  const movies = ids.map(id => getMovie(id)); //Race regresa solo la promesa que se resuelva primero.\n\n  return Promise.race(movies);\n}\n\ndocument.getElementById('sequence').onclick = async function () {\n  const movies = await getTopMoviesInSequence();\n  renderMovies(movies);\n};\n\ndocument.getElementById('parallel').onclick = async function () {\n  const movies = await getTopMoviesInParallel();\n  renderMovies(movies);\n};\n\ndocument.getElementById('fastest').onclick = async function () {\n  const movie = await getFastestTopMovie();\n  renderMovies([movie]);\n};</script>\n</body>\n\n</html>"},"sourceMaps":null,"error":null,"hash":"66477e8228a7acebf1e36c23a2001ab6","cacheData":{"env":{}}}