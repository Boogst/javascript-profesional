{"id":"ejercicios/this.html","dependencies":[{"name":"/mnt/c/Users/villegasDev/platzi/Escuela de JS/Curso profesional de JS/javascript-profesional/package.json","includedInParent":true,"mtime":1582595203998}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Scope</title>\n</head>\n<body>\n    <a href=\"/ejercicios/\">Go back</a>\n\n    <script>//this en el scope global\nconsole.log(`this: ${this}`); //ths en el scope de una funcion\n\nfunction whoIsThis() {\n  return this;\n} //Al llamar la funcion directamente JavaScript le asigna windows\n//El motor de js le asigna este valor por defecto. EXCEPTO si estamos usando JS en el modo \"stric mode\"\n\n\nconsole.log(`whoIsThis: ${whoIsThis()}`); //this en el scope de una funcion en strict mode\n\nfunction whoIsThisStrict() {\n  \"use strict\";\n\n  return this;\n}\n\nconsole.log(`whoIsThisStrict: ${whoIsThisStrict()}`); //this en el contexto de un objeto\n\nconst person = {\n  name: 'Gabriel',\n  saludar: function () {\n    //THIS se refiere a un objeto. Ese objeto es el que actualmente está ejecutando un pedazo de código\n    console.log(`Hola soy ${this.name}`);\n  }\n};\nperson.saludar(); //this cuando sacamos a una funcion de un objeto\n\nconst accion = person.saludar; //Se le pasa la funcion saludar por referencia a la variable \"accion\"\n\naccion(); //Se ejecuta esa funcion, por lo tanto, NO SE ESTA LLAMANDO DENTRO DEL CONTEXTO DE UN OBJETO. Es como ejecutar una funcion directamente ej: whoIsThis\n//this en el contexto de una \"clase\"\n\nfunction Person(name) {\n  //funciona como un constructor\n  //Todas las funciones tienen un valor de \"this\". Lo que sucede, es que ese valor de \"this\" es un objeto vacio\n  //this = {} comienza asi\n  this.name = name; //Esto que hacemos de asignar this.name = name lo hacemos sobre la instancia no sobre el objeto prototypo(clase | plantilla | prototipo)\n}\n\nPerson.prototype.saludar = function () {\n  console.log(`Me llamo ${this.name}`);\n};\n\nconst angela = new Person(\"Angela\"); //This en este caso se va a referir a la instancia del objeto, en este caso a angela\n\nangela.saludar();</script>\n\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"a9033be9fe298afc6f8e3ca80ac25b96","cacheData":{"env":{}}}