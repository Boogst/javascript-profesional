{"id":"ejercicios/call-apply-bind.html","dependencies":[{"name":"/mnt/c/Users/villegasDev/platzi/Escuela de JS/Curso profesional de JS/javascript-profesional/package.json","includedInParent":true,"mtime":1580510549686}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Scope</title>\n</head>\n<body>\n    <a href=\"/ejercicios/\">Go back</a>\n    <u>\n        <li><button class=\"call-to-action\">Aprender</button></li>\n        <li><button class=\"call-to-action\">Aprender más</button></li>\n        <li><button class=\"call-to-action\">¡Nunca pares de aprender!</button></li>\n    </u>\n    <script>//Establece \"this\" usando 'call'\nfunction saludar() {\n  console.log(`Hola, soy ${this.nombre} ${this.apellido}`);\n}\n\nconst luis = {\n  nombre: 'Luis',\n  apellido: 'Villegas'\n};\nsaludar.call(luis); //Establece \"this\" usando \"call\" y pasar argumentos a la función\n\nfunction caminar(metros, direccion) {\n  console.log(`${this.nombre} camina ${metros} metros hacia ${direccion}`);\n}\n\ncaminar.call(luis, 400, 'norte'); //Establece \"this\" usando \"apply\" y pasar argumentos a la funcion\n\ncaminar.apply(luis, [800, 'sur']);\n/*\n'C'all - comma\n'A'pply - arreglo\n*/\n//establecer \"this\"  en una nueva funcion usando 'bind'\n\nconst daniel = {\n  nombre: 'Daniel',\n  apellido: 'Sanchez'\n};\nconst saludarADaniel = saludar.bind(daniel);\nsaludarADaniel(); //const danielCaminar = caminar.bind(daniel, 600, 'Norte'); //asi me permite guardar los valores de los argumentos (recordarlos)\n//const danielCaminar = caminar.bind(daniel, 600); //Podemos guardar argumentos parciales (no es necesario colocarlos todos)\n//danielCaminar('norte');\n\nconst danielCaminar = caminar.bind(daniel);\ndanielCaminar(600, 'norte'); //Cuando es util usar uno de estos métodos\n//console.log([1,2].__proto__)\n//document.getEle... me retorna un NodeList se parecen a los arreglos pero no tienen algunos metodos por ejemplo en forEech\n\nconst buttons = document.getElementsByClassName(\"call-to-action\"); // buttons.forEach(button =>{\n//     button.onclick = () => alert('Nunca pares de aprender');\n// })\n\nArray.prototype.forEach.call(buttons, button => {\n  button.onclick = () => alert('Nunca pares de aprender');\n});</script>\n\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"6109d29b546be28743a2299a77854f8e","cacheData":{"env":{}}}