{"id":"ejercicios/closures.html","dependencies":[{"name":"/mnt/c/Users/villegasDev/platzi/Escuela de JS/Curso profesional de JS/javascript-profesional/package.json","includedInParent":true,"mtime":1580510549686}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Scope</title>\n</head>\n<body>\n    <a href=\"/ejercicios/\">Go back</a>\n\n    <script>//Closures\n//printColor\n//*Este es el scope de la funcion\n// ( function(){ //Esto se llama IIFE(Immediately-invoked function expressions)\n//     let color = 'green'\n//      *funcion que fue definida dentro de este scope \n//     function printColor(){\n//         console.log(color) *Esto es un closure: es la combinacion una funcion o un objeto y el scope donde fue definida esa funcion o objeto\n//     }\n//     printColor();\n// })();\n//Funciones que regresan funciones\n// function makeColorPrinter(color){\n//     let colorMessage = `The color is ${color}`\n//     return function(){\n//         console.log(colorMessage)\n//     }\n// }\n// //Regresa una funcion, por lo tanto debemos ejecutarla\n// let greenColorPrinter = makeColorPrinter('green');\n// greenColorPrinter(); //Ejecutando la funcion\n//Variables \"privadas\"\n// const counter = {\n//     count: 3\n// }\n// console.log(counter.count) //Todos pueden leer este valor\nfunction makeCounter(n) {\n  let count = n;\n  return {\n    increase: function () {\n      count++;\n    },\n    decrease: function () {\n      count--;\n    },\n    getCount: function () {\n      return count;\n    }\n  };\n}\n\nconst counter = makeCounter(7); // console.log(counter.count) no existe UNDEFINE\n\nconsole.log(counter.getCount());\ncounter.decrease();\ncounter.decrease();\nconsole.log(counter.getCount());</script>\n\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"e0bc30a93a0b2369d2c04443aa829345","cacheData":{"env":{}}}